language: c++
compiler:
    - clang
    - gcc

before_install:
    - sudo apt-get install -qq libprotobuf-dev protobuf-compiler cmake libboost-all-dev liblog4cxx10-dev valgrind libgtest-dev google-mock
    - wget https://raw.github.com/zeromq/cppzmq/master/zmq.hpp -O ./include/zmq.hpp
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update -qq
    - sudo apt-get install -qq g++-4.8
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
    - sudo apt-get install -qq python2.7 lcov -y
    - sudo easy_install gcovr
    - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 1
    # use lcov 1.10 to get rid of out of memory issue
    - mkdir -p .deps && cd .deps
    - wget -nc --no-check-certificate http://downloads.sourceforge.net/ltp/lcov-1.10.tar.gz
    - tar xzf lcov-1.10.tar.gz
    - cd lcov-1.10 && make && sudo make install
    - cd ..
    - wget -nc --no-check-certificate https://googlemock.googlecode.com/files/gmock-1.7.0.zip
    - unzip gmock-1.7.0.zip
    - cd gmock-1.7.0
    - cmake -DCMAKE_BUILD_TYPE=RELEASE
    - make
    - export GTEST_ROOT=$(pwd)/gtest/
    - export GMOCK_ROOT=$(pwd)/
    - cd ..
    - wget -nc --no-check-certificate http://download.zeromq.org/zeromq-4.0.4.tar.gz
    - tar xzf zeromq-4.0.4.tar.gz
    - cd zeromq-4.0.4
    - mkdir build
    - mkdir install
    - export ZMQ_INSTALL_DIR=$(pwd)/install/
    - cd build
    - ../configure --prefix=$ZMQ_INSTALL_DIR
    - make && make install
    - cd ../../..

script:
    - gcov -v | grep "4.8"
    - lcov --version | grep "1.10"
    - mkdir -p ./build
    - cd ./build && cmake -DZMQ_INCLUDE_DIR="$ZMQ_INSTALL_DIR/include" -DZMQ_LIBRARY="$ZMQ_INSTALL_DIR/lib/libzmq.so.3" .. && make
    - cd ./test && ctest && cd ..
    - if [ "$CXX" = "g++-4.8" ] ; then cd .. && mkdir -p build_coverage && cd build_coverage ; fi
    - if [ "$CXX" = "g++-4.8" ] ; then cmake .. -DORWELL_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug -DZMQ_INCLUDE_DIR="$ZMQ_INSTALL_DIR/include" -DZMQ_LIBRARY="$ZMQ_INSTALL_DIR/lib/libzmq.so.3" ; fi
    - if [ "$CXX" = "g++-4.8" ] ; then make orwell_coverage ; fi

after_success:
    - if [ "$CXX" = "g++-4.8" ] ; then gcovr . -r .. -p | sed "/Missing/{s/\(.*\)Missing/\1/p;h;s/^/\n/;:lineloop;N;:charloop;s/\(.*\)\n.\n\(.\).*/\1\2/;t exitcharloop;s/\n.\(.\+\)\n\(.\)/\2\n\1\n/;t charloop;:exitcharloop;s/\n.*//;p;s/.*//;G;b lineloop}" -n ; fi
    - cd ../build
    - make ExperimentalMemCheck
    - sed -n -e '/LEAK SUMMARY:/,+8p' -e '/^Test\|Testing:[ ]\|Test:[ ]/p' Testing/Temporary/LastDynamicAnalysis_*.log

notifications:
  recipients:
    - massimo.gengarelli@gmail.com
  email:
    on_success: change
    on_failure: always
